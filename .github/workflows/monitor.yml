name: Monitor Spain Visa Status

on:
  schedule:
    - cron: '*/500 * * * *' # Runs every 15 minutes
  workflow_dispatch: # Allows manual trigger for testing

jobs:
  monitor:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 1: Download previous hash artifact
    - name: Download last_hash.txt (if exists)
      uses: actions/download-artifact@v4
      with:
        name: last-hash-file
        path: .
      continue-on-error: true

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run status monitor
      # Use `continue-on-error: true` if you want the upload to happen
      # even if the Python script itself encounters a non-fatal error,
      # but still want to see the error in the logs.
      # However, for a change detection script, a script error might mean
      # you don't have a valid hash to save.
      # So, it's often better to let the script fail and fix it,
      # rather than save a potentially bad hash.
      run: python monitor_spain.py
      env:
        EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        EMAIL_TO: ${{ secrets.EMAIL_TO }}

    # Step 2: Upload the updated hash artifact
    # Use if: always() to ensure this step runs even if a previous step failed.
    # This is critical for persistence if the Python script itself might fail
    # but you still want the (potentially partial) hash to be saved.
    - name: Upload last_hash.txt
      uses: actions/upload-artifact@v4
      if: always() # <--- Add this line
      with:
        name: last-hash-file
        path: last_hash.txt
